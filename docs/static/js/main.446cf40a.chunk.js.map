{"version":3,"sources":["serviceWorker.ts","store/modules/todo.js","login/index.tsx","about/index.tsx","components/AddTodo.js","components/Todo.tsx","components/TodoList.tsx","components/Link.tsx","containers/FilterLink.js","components/Footer.tsx","containers/TApp.js","app/index.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","VisibilityFilters","addTodo","text","type","setVisibilityFilter","filter","SHOW_ALL","todoApp","combineReducers","visibilityFilter","state","action","todos","completed","slice","index","Object","assign","Login","useState","setState","history","useHistory","className","onSubmit","e","preventDefault","push","process","name","value","onChange","target","required","About","useLocation","AddTodo","input","dispatch","trim","ref","node","connect","Todo","onClick","style","textDecoration","TodoList","onTodoClick","map","todo","key","Link","active","children","href","FilterLink","ownProps","Footer","selectTodos","visibleTodos","onAddClick","completeTodo","onFilterChange","nextFilter","App","to","exact","path","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.446cf40a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nconst ADD_TODO = \"ADD_TODO\";\r\nconst COMPLETE_TODO = \"COMPLETE_TODO\";\r\nconst SET_VISIBILITY_FILTER = \"SET_VISIBILITY_FILTER\";\r\n\r\nexport const VisibilityFilters = {\r\n    SHOW_ALL: \"SHOW_ALL\",\r\n    SHOW_COMPLETED: \"SHOW_COMPLETED\",\r\n    SHOW_ACTIVE: \"SHOW_ACTIVE\"\r\n};\r\n\r\nexport function addTodo(text) {\r\n    return { type: ADD_TODO, text };\r\n}\r\n\r\nexport function completeTodo(index) {\r\n    return { type: COMPLETE_TODO, index };\r\n}\r\n\r\nexport function setVisibilityFilter(filter) {\r\n    return { type: SET_VISIBILITY_FILTER, filter };\r\n}\r\n\r\nconst { SHOW_ALL } = VisibilityFilters;\r\n\r\nfunction visibilityFilter(state = SHOW_ALL, action) {\r\n    switch (action.type) {\r\n        case SET_VISIBILITY_FILTER:\r\n            return action.filter;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction todos(state = [] , action) {\r\n    switch (action.type) {\r\n        case ADD_TODO:\r\n            return [...state, {\r\n                text: action.text,\r\n                completed: false\r\n            }];\r\n        case COMPLETE_TODO:\r\n            return [\r\n                ...state.slice(0, action.index),\r\n                Object.assign({}, state[action.index], {\r\n                    completed: true\r\n                }),\r\n                ...state.slice(action.index + 1)\r\n            ];\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst todoApp = combineReducers({\r\n    visibilityFilter,\r\n    todos\r\n});\r\n\r\nexport default todoApp","import React, { useState } from 'react';\r\nimport './login.scss';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Login: React.FC = () => {\r\n  const [state, setState] = useState();\r\n  const history = useHistory();\r\n\r\n  const action = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    history.push(`${process.env.REACT_APP_BASE_URL}/about`, { name : state });\r\n  }\r\n\r\n  return (\r\n    <div className=\"Login\">\r\n      <form onSubmit={action}>\r\n        <h1>현빈이 키우기</h1>\r\n        <label>\r\n          - 당신의 이름 -\r\n        </label>\r\n        <input type=\"text\" value={state} onChange={(e) => setState(e.target.value)} required />\r\n        <input type=\"submit\" />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport './about.scss';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\ninterface loca {\r\n  state: {\r\n    name: String\r\n  }\r\n}\r\n\r\nconst About: React.FC = () => {\r\n\r\n  const location: loca = useLocation();\r\n  return (\r\n    <div className=\"About\">\r\n      <h1>게임을 시작하지</h1>\r\n        <h1>{location.state ? location.state.name : null}</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addTodo } from \"../store/modules/todo\"\r\n\r\nlet AddTodo = ({ dispatch }) => {\r\n    let input\r\n\r\n    return (\r\n        <div>\r\n            <form\r\n                onSubmit={e => {\r\n                    e.preventDefault()\r\n                    if (!input.value.trim()) {\r\n                        return\r\n                    }\r\n                    dispatch(addTodo(input.value))\r\n                    input.value = ''\r\n                }}\r\n                >\r\n                    <input\r\n                        ref={node => {\r\n                            input = node\r\n                        }}\r\n                    />\r\n                    <button type=\"submit\">\r\n                        할일 추가\r\n                    </button>\r\n                </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nAddTodo = connect()(AddTodo)\r\n\r\nexport default AddTodo","import React from \"react\";\r\ninterface Props {\r\n    onClick: () => '',\r\n    completed: boolean,\r\n    text: String\r\n}\r\nconst Todo: React.FC<Props> = ({ onClick, completed, text }) => (\r\n    <li\r\n        onClick={onClick}\r\n        style={ {\r\n            textDecoration: completed ? 'line-through' : 'none'\r\n        }}\r\n    >\r\n        {text}\r\n    </li>\r\n)\r\n\r\nexport default Todo;","import React from \"react\";\r\nimport Todo from \"./Todo\";\r\n\r\ninterface Props {\r\n    todos: [],\r\n    onTodoClick: (a: String | Number) => ''\r\n}\r\n\r\nconst TodoList: React.FC<Props> = ({ todos, onTodoClick }) => (\r\n    <ul>\r\n        {todos.map((todo, index) => (\r\n            <Todo key={index} {...todo} onClick={() => onTodoClick(index)} />\r\n        ))}\r\n    </ul>\r\n)\r\n\r\nexport default TodoList;","import React from \"react\";\r\n\r\ninterface Props {\r\n    active: boolean,\r\n    children: Node,\r\n    onClick: Function\r\n}\r\n\r\nconst Link: React.FC<Props> = ({ active, children, onClick }) => {\r\n    if (active) {\r\n        return <span>{children}</span>\r\n    }\r\n\r\n    return (\r\n        // eslint-disable-next-line\r\n        <a\r\n            href=\"\"\r\n            onClick={e => {\r\n                e.preventDefault()\r\n                onClick()\r\n            }}\r\n            >\r\n                {children}\r\n            </a>\r\n    )\r\n}\r\n\r\nexport default Link","import { connect } from \"react-redux\";\r\nimport { setVisibilityFilter } from \"../store/modules/todo\"; \r\nimport Link from \"../components/Link\"\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        active: ownProps.filter === state.visibilityFilter\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        onClick: () => {\r\n            dispatch(setVisibilityFilter(ownProps.filter))\r\n        }\r\n    }\r\n}\r\n\r\nconst FilterLink = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Link)\r\n\r\nexport default FilterLink","import React from \"react\";\r\nimport FilterLink from \"../containers/FilterLink\"\r\n\r\nconst Footer = () => (\r\n    <p>\r\n        Show:\r\n        {' '}\r\n        <FilterLink filter=\"SHOW_ALL\">\r\n            ALL\r\n        </FilterLink>\r\n        {', '}\r\n        <FilterLink filter=\"SHOW_ACTIVE\">\r\n            Active\r\n        </FilterLink>\r\n        {', '}\r\n        <FilterLink filter=\"SHOW_COMPLETED\">\r\n            Completed\r\n        </FilterLink>\r\n    </p>\r\n)\r\n\r\nexport default Footer","import React from \"react\";\r\nimport AddTodo from '../components/AddTodo';\r\nimport TodoList from '../components/TodoList';\r\nimport Footer from '../components/Footer';\r\n// import VisibleTodoList from \"./VisibleTodoList\"\r\nimport { addTodo, completeTodo, setVisibilityFilter, VisibilityFilters } from \"../store/modules/todo\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst TApp = ({ dispatch, visibleTodos, visibilityFilter }) => (\r\n    <div>\r\n        <AddTodo\r\n            onAddClick={text => dispatch(addTodo(text))} />\r\n        <TodoList\r\n            todos={visibleTodos}\r\n            onTodoClick={index => dispatch(completeTodo(index))} />\r\n        <Footer\r\n            filter={visibilityFilter}\r\n            onFilterChange={nextFilter => dispatch(setVisibilityFilter(nextFilter))} />\r\n    </div>\r\n)\r\n\r\nfunction selectTodos(todos, filter) {\r\n    switch (filter) {\r\n        case VisibilityFilters.SHOW_ALL:\r\n            return todos;\r\n        case VisibilityFilters.SHOW_COMPLETED:\r\n            return todos.filter(todo => todo.completed);\r\n        case VisibilityFilters.SHOW_ACTIVE:\r\n            return todos.filter(todo => !todo.completed);\r\n        default:\r\n            return;\r\n    }\r\n}\r\n\r\n\r\nfunction select(state) {\r\n    return {\r\n        visibleTodos: selectTodos(state.todos, state.visibilityFilter),\r\n        visibilityFilter: state.visibilityFilter\r\n    }\r\n}\r\nexport default connect(select)(TApp)","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport './App.scss';\r\nimport Login from '../login';\r\nimport About from '../about';\r\nimport TApp from '../containers/TApp';\r\n\r\nconst App: React.FC = () => {\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <div>\r\n          <ul className=\"app-menu\">\r\n            <Link to={`${process.env.REACT_APP_BASE_URL}/`}><li>\r\n              로그잉\r\n            </li></Link>\r\n            <Link to={`${process.env.REACT_APP_BASE_URL}/about`}><li>\r\n              방구\r\n            </li></Link>\r\n            <Link to={`${process.env.REACT_APP_BASE_URL}/dashboard`}><li>\r\n              잼난 일\r\n            </li></Link>\r\n          </ul>\r\n\r\n          <hr />\r\n\r\n          {/*\r\n          A <Switch> looks through all its children <Route>\r\n          elements and renders the first one whose path\r\n          matches the current URL. Use a <Switch> any time\r\n          you have multiple routes, but you want only one\r\n          of them to render at a time\r\n        */}\r\n          <Switch>\r\n            <Route exact path={`${process.env.REACT_APP_BASE_URL}/`}>\r\n              <Login />\r\n            </Route>\r\n            <Route path={`${process.env.REACT_APP_BASE_URL}/about`}>\r\n              <About />\r\n            </Route>\r\n            <Route path={`${process.env.REACT_APP_BASE_URL}/dashboard`}>\r\n              <TApp />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router >\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport todoApp from \"./store/modules/todo\";\r\nimport App from './app';\r\n\r\nlet store = createStore(todoApp);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}